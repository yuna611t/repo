@startuml
abstract Creator {
    + {abstract} FactoryMethod()
    + AnOperation()
}
class ConcreteCreator {
    + FactoryMethod()
}

abstract Product

ConcreteCreator -up-|> Creator
ConcreteProduct -up-|> Product
ConcreteCreator .le.> ConcreteProduct : create >

note right of Creator 
    product = FactoryMethod()
end note
note right of ConcreteCreator
    return new ConcreteProduct
end note


' More real-world situation
abstract Tool
Hammer -up-|> Tool
Measurement -up-|> Tool
abstract ToolFactory {
    + OrderTool()
    + {abstract} createTool()
}
class HammerFactory {
    + createTool()
}
class MeasurementFactory {
    + createTool()
}
HammerFactory --|> ToolFactory
MeasurementFactory --|> ToolFactory
HammerFactory ...> Hammer : create >
MeasurementFactory ...> Measurement : create >
Client ....> ToolFactory
@enduml